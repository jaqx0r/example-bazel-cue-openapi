module(name = "example-bazel-cue-openapi")

bazel_dep(name = "rules_cue", version = "0.14.1")
bazel_dep(name = "rules_go", version = "0.57.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")
go_sdk.nogo(nogo = "//:nogo")

bazel_dep(name = "gazelle", version = "0.45.0", dev_dependency = True)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_gin_gonic_gin", "com_github_google_uuid", "com_github_oapi_codegen_runtime")

bazel_dep(name = "rules_oapi_codegen", version = "0.0", dev_dependency = True)
git_override(
    module_name = "rules_oapi_codegen",
    commit = "35c2ecdd2d44c4d0bbadc0019b753ae71704e86a",
    remote = "https://github.com/jaqx0r/rules_oapi_codegen",
)

bazel_dep(name = "aspect_rules_ts", version = "3.7.0")
bazel_dep(name = "aspect_rules_js", version = "2.6.2")
bazel_dep(name = "rules_nodejs", version = "6.5.2")
bazel_dep(name = "aspect_rules_esbuild", version = "0.22.1")
bazel_dep(name = "aspect_rules_swc", version = "2.4.4")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    data = ["//:package.json"],
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

# Allow us to do `bazel run @pnpm -- --dir=$PWD update --lockfile-only` and `install --lockfile-only ...`
pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm", dev_dependency = True)
use_repo(pnpm, "pnpm")

bazel_dep(name = "bazel_skylib", version = "1.8.2")
bazel_dep(name = "rules_itest", version = "0.0.36")
