load("@aspect_rules_esbuild//esbuild:defs.bzl", "esbuild")
load("@aspect_rules_js//js:defs.bzl", "js_run_devserver")
load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@bazel_skylib//lib:partial.bzl", "partial")
load("@npm//:http-server/package_json.bzl", http_server = "bin")

ts_project(
    name = "frontend",
    srcs = ["frontend.tsx"],
    allow_js = True,
    data = [
        "//:node_modules/react",
        "//:node_modules/react-dom",
    ],
    declaration = True,
    no_emit = True,
    resolve_json_module = True,
    source_map = True,
    transpiler = partial.make(
        swc,
        swcrc = "//:.swcrc",
    ),
    tsconfig = "//:tsconfig",
    deps = [
        "//:node_modules/@types/react",
        "//:node_modules/@types/react-dom",
        "//:node_modules/react",
        "//:node_modules/react-dom",
    ],
)

esbuild(
    name = "bundle",
    srcs = [
        "index.html",
        ":frontend",
    ],
    entry_point = "frontend.tsx",
    output_dir = True,
    sourcemap = "linked",
    splitting = True,
    tsconfig = "//:tsconfig",
    visibility = ["//visibility:public"],
)

http_server.http_server_binary(
    name = "http_server",
)

js_run_devserver(
    name = "devserver",
    args = [
        package_name(),
        "-o",
        "--enable-source-maps",
    ],
    data = [
        "index.html",
        ":bundle",
    ],
    tool = ":http_server",
)
